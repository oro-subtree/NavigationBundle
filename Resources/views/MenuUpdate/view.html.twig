{% extends bap.layout %}

{% import 'OroNavigationBundle:Include:contentTags.html.twig' as navigationMacro %}
{% import 'OroUIBundle::macros.html.twig' as UI %}
{% from _self import resetButton %}

{% if ownershipType == constant('Oro\\Bundle\\NavigationBundle\\Entity\\MenuUpdate::OWNERSHIP_ORGANIZATION') %}
    {% set routePrefix = 'oro_navigation_org_menu_' %}
    {% oro_title_set({params : {"%title%": entity.name}}) %}
    {% set breadcrumbs = {
        'entity': entity,
        'indexPath': path(routePrefix ~ 'index'),
        'indexLabel': 'oro.navigation.menuupdate.roots_plural_label'|trans,
        'entityTitle': entity.name
    } %}
{% else %}
    {% set routePrefix = 'oro_navigation_user_menu_' %}
    {% set fullname = app.user|oro_format_name|default('N/A') %}
    {% oro_title_set({params : {"%username%": fullname, "%title%": entity.name}}) %}
    {% set breadcrumbs = {
        'entity': entity,
        'indexPath': path('oro_user_index'),
        'indexLabel': 'oro.user.entity_plural_label'|trans,
        'additional': [
            {
                'indexPath': path('oro_user_profile_view'),
                'indexLabel': fullname
            },
            {
                'indexPath': path(routePrefix ~ 'index'),
                'indexLabel': 'oro.navigation.menuupdate.roots_plural_label'|trans
            }
        ],
        'entityTitle': entity.name
    } %}
{% endif %}

{% block content %}
    <div class="layout-content"
            {% if pageComponent is defined %}{{ UI.renderPageComponentAttributes(pageComponent) }}{% endif %}
    >
        <div class="container-fluid page-title">
            <div class="navigation clearfix navbar-extra navbar-extra-right">
                <div class="row">
                    {% set actionButtons %}
                        <div class="pull-right">
                            <div class="pull-right title-buttons-container">
                                {{ UI.button({
                                    'path' : path(routePrefix ~ 'create', { 'menuName': menuName }),
                                    'iCss': 'icon-folder-close',
                                    'aCss': 'btn-primary',
                                    'label': 'oro.ui.create_entity'|trans({'%entityName%': 'oro.navigation.menuupdate.entity_label'|trans}),
                                    'title': 'oro.ui.create_entity'|trans({'%entityName%': 'oro.navigation.menuupdate.entity_label'|trans})
                                }) }}

                                {{ UI.buttonSeparator() }}

                                {{ resetButton({
                                    'dataUrl': path('oro_api_reset_menuupdates', {menuName: menuName, ownershipType: ownershipType}),
                                    'dataRedirect': path(routePrefix ~ 'view', {menuName: menuName}),
                                    'menuKey': menuName
                                }) }}
                            </div>
                        </div>
                    {% endset %}
                    {%  if not isMobileVersion() %}
                        {{ actionButtons }}
                    {%  endif %}
                    <div class="pull-left-extra">
                        {% block pageHeader %}
                            {{ include('OroNavigationBundle:MenuUpdate:pageHeader.html.twig') }}
                        {% endblock pageHeader %}
                    </div>
                    {%  if isMobileVersion() %}
                        {{ actionButtons }}
                    {%  endif %}
                </div>
            </div>
        </div>

        <div class="layout-content scrollable-container">
            {% block content_data %}
                <div class="left-panel-container">
                    <div class="placeholder">
                        <div class="scrollable-container">
                            <div class="left-panel scrollable-container">
                                <div class="menu-item">
                                    {% set treeOptions = {
                                        'data' : tree,
                                        'menu' : menuName,
                                        'updateAllowed' : true,
                                        'onRootSelectRoute' : routePrefix ~ 'view',
                                        'onSelectRoute' : routePrefix ~ 'update'
                                    } %}
                                    <div
                                            data-page-component-module="oronavigation/js/app/components/tree-manage-component"
                                            data-page-component-options="{{ treeOptions|json_encode }}"
                                    ></div>
                                </div>
                            </div>
                            <div class="content">
                                <div class="text-center">
                                    {{ 'oro.navigation.menuupdate.select_existing_or_create_new'|trans }}
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            {% endblock content_data %}
        </div>
    </div>
{% endblock content %}

{% macro resetButton(parameters) %}
    {% import 'OroUIBundle::macros.html.twig' as UI %}

    {% set url = parameters.dataUrl is defined ? parameters.dataUrl : '' %}

    {% set parameters = parameters|merge({
        'data': {
            'message': 'oro.navigation.menuupdate.reset_confirm'|trans({ '%menuKey%' : parameters.menuKey }),
            'success-message': 'oro.navigation.menuupdate.reset_message'|trans({ '%menuKey%' : parameters.menuKey }),
            'ok-text': 'oro.navigation.menuupdate.reset_ok_text'|trans,
            'title': 'oro.navigation.menuupdate.reset_title'|trans,
            'url': url
        },
        'title': 'oro.navigation.menuupdate.reset'|trans,
        'label': 'oro.navigation.menuupdate.reset'|trans,
        'aCss': ' btn icons-holder-text no-hash remove-button',
        'path': 'javascript:void(0);'
    }) %}

    {% if parameters.dataRedirect is defined %}
        {% set data = parameters.data|merge({'redirect': parameters.dataRedirect}) %}
        {% set parameters = parameters|merge({ 'data': data }) %}
    {% endif %}

    <div class="pull-left btn-group icons-holder">
        {{ UI.link(parameters) }}
    </div>
{% endmacro %}
